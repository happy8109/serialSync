---
alwaysApply: true
---
# SerialSync 项目开发规则

## 1. 技术栈与工具
- Node.js (v16+)
- serialport（串口通信）
- config（配置管理）
- winston（日志系统）
- 推荐：ESLint、Prettier

## 2. 项目结构
- src/core/serial/SerialManager.js：核心串口与协议实现
- src/ui/：Web UI（后续开发）
- src/utils/：工具与日志
- config/：配置文件
- logs/：日志文件
- docs/：开发文档（架构、接口、协议、CLI）

## 3. 功能与协议规范
- 支持自动重连、分块传输、ACK/重试、压缩、进度事件
- 串口协议：短包/分块包自动识别，详见docs/protocol.md
- 文件分块大小建议256~1024，支持autospeed自动测速
- 进度、丢块、重试等统计信息可订阅
- CLI命令详见docs/cli.md

## 4. 配置与性能
- 所有参数（串口、chunkSize、timeout、重试、压缩等）均可配置
- 性能目标：>50KB/s，响应<5s，内存<100MB，CPU<30%
- 日志与安全审计默认开启

## 5. 开发与维护建议
- 详细开发计划、接口、协议、CLI用法等请查阅docs/目录
- README.md仅保留项目简介、快速入门、文档索引
- 单人/小团队开发，文档不宜过细碎，保持高效可维护
- 后续UI开发应直接对接SerialManager接口，复用进度/事件机制

---

如有新需求或架构调整，优先同步更新docs/下相关文档和本规则。 